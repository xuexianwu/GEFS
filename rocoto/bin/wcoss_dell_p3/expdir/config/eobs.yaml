# This file is used to generate config.eobs, which would be used to
# control the ensemble observation innovation.  The code and scripts
# for that are not part of this public release, so this file is
# ignored.

config_eobs:
  filename: config.eobs
  content: !expand |
    #!/bin/ksh -x
    
    # This file is automatically generated from the YAML-based system
    # in ecf/ecfutils/.  Any changes will be overwritten if
    # setup_case.sh is rerun.
    
    ########## config.eobs config.eomg ##########
    # Ensemble innovation specific, dependency config.anal
    
    echo "BEGIN: config.eobs"

    export npe_eobs="{doc.partition_common.resources.run_eobs[0].mpi_ranks}"
    export nth_eobs="{doc.partition_common.resources.run_eobs[0].OMP_NUM_THREADS}"
    export npe_node_eobs="{doc.partition_common.resources.run_eobs[0].max_ppn}"

    if [[ "$machine" = "WCOSS_DELL_P3" ]]; then
        export npe_node_eobs=14
    fi
    if [[ "$machine" == "WCOSS_C" ]]; then
        export memory_eobs="3072M"
    elif [[ "$machine" == "GAEA" ]]; then
        export memory_eobs="3072M"
    fi
    
    export INVOBSSH="$HOMEgsi/scripts/exglobal_innovate_obs_fv3gfs.sh.ecf"
    export ENKFINVOBSSH="$HOMEgsi/scripts/exglobal_enkf_innovate_obs_fv3gfs.sh.ecf"
    export NMEM_EOMGGRP={doc.data_assimilation.NMEM_EOMGGRP}
    export RERUN_EOMGGRP="{tools.YES_NO(doc.data_assimilation.RERUN_EOMGGRP)}"
    
    # GSI namelist options related to observer for EnKF
    export OBSINPUT_INVOBS="dmesh(1)=225.0,dmesh(2)=225.0"
    export OBSQC_INVOBS="tcp_width=60.0,tcp_ermin=2.0,tcp_ermax=12.0"
    
    export USE_RADSTAT="NO" # This can be only used when bias correction is non-zero.
    # Diagnostic files must be created for EnKF
    export GENDIAG="{tools.YES_NO(doc.data_assimilation.GENDIAG)}"

    echo "END: config.eobs"
    
