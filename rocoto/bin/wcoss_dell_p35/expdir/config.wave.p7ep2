#!/bin/ksh -x
#
# This file is automatically generated from the YAML-based system
# in ecf/ecfutils/.  Any changes will be overwritten if
# setup_case.sh is rerun.

########## config.base ##########
# Common to all steps

  echo "BEGIN: config.wave"
  export wave_sys_ver=v1.0.0

  export CDUMPRSTwave="gdas"

  # Grids for wave model
  export waveGRD='gwes_30m'
  export waveGRDN='1 2 3' # gridnumber for ww3_multi
  export waveGRDG='10 20 30' # gridgroup for ww3_multi
  export USE_WAV_RMP='NO' #yes/no rmp grid remapping pre-processed coefficients
  
  # ESMF input grid
  export waveesmfGRD='' # input grid
  
  # Grids for output fields
  export waveuoutpGRD=points
  export waveinterpGRD='' # Grids that need to be interpolated from native
  # in POST will generate grib unless gribOK not set
  export wavesbsGRD=''  # side-by-side grids generated as wave model runs, writes to com
  export wavepostGRD='gwes_30m' # Native grids that will be post-processed (grib2)
 
  #export FHMAX_WAV=840
  export FHMAX_WAV=384 
  if [ "$CDUMP" = "gdas" ]
  then
    export FHMAX_WAV=9  #if GDAS use GDAS
  fi
  export WAVHINDH=0
  export FHMIN_WAV=0
  export FHOUT_WAV=3
  export FHMAX_HF_WAV=120
  export FHOUT_HF_WAV=3
  
  # Output stride
  export WAV_WND_HOUR_INC=1      # This value should match with the one used in
  #                          # the wind update script
  # gridded and point output rate
  export DTFLD_WAV=`expr $FHOUT_HF_WAV \* 3600`
  export DTPNT_WAV=10800
  export FHINCP_WAV=`expr $DTPNT_WAV / 3600`
  
  # Grids for input fields
  export WAVEICE_DID=
  export WAVEICE_FID=
  export WAVECUR_DID=
  export WAVECUR_FID=
  export WAVEWND_DID=
  export WAVEWND_FID=
  
  # Selected output parameters (gridded)
  export OUTPARS_WAV='WND CUR ICE HS T01 T02 DIR FP DP PHS PTP PDIR CHA'
  
  # Options for point output (switch on/off boundary point output)
  # export DOIBP_WAV='NO'
  #
  # # Intake currents settings
  export WAV_CUR_DT=3
  export WAV_CUR_HF_DT=1
  export WAV_CUR_HF_FH=72
  export WAV_CUR_CDO_SMOOTH="False"
  
  # Number of cycles to look back for restart files
  export nback=
  
  if [ "$CDUMP" = "gdas" ]
  then
    WAVNCYC=4
    WAVHCYC=6
    FHMAX_WAV_CUR=48 # RTOFS forecasts only out to 8 days
  else
    WAVHCYC=24
    FHMAX_WAV_CUR=192 # RTOFS forecasts only out to 8 days
  fi
  export FHMAX_WAV_CUR WAVHCYC WAVNCYC
  
  export RSTTYPE_WAV='T' # generate second tier of restart files
  export DT_1_RST_WAV=0 # time between restart files, set to DTRST=1 for a single restart file
  export DT_2_RST_WAV=3024000  # restart stride for checkpointing restart
  export RSTIOFF_WAV=0 # first restart file offset relative to model start
  
  export RUNMEM=-1
  
  if [ $RUNMEM = -1 ]; then
  # No suffix added to model ID in case of deterministic run
  export waveMEMB=
  else
  # Extract member number only
  export waveMEMB=`echo $RUNMEM | grep -o '..$'`
  fi
  #
  # Determine if wave component needs input and/or is coupled
  export WW3ATMINP='CPL'
  export WW3ICEINP='CPL'
  export WW3CURINP='CPL'
  #
  if [ "$WW3ICEINP" = "YES" ]; then
  export WAVICEFILE=$CDUMP.t$((cyc))z.seaice.5min.grib2
  fi
  #
  # Determine if input is from perturbed ensemble (T) or single input file (F) for all members
  export WW3ATMIENS='F'
  export WW3ICEIENS='F'
  export WW3CURIENS='F'
  #
  
  # Set resources to propagate NTASKS across cfp call
  export NTASKS=12
  #
  # # Path to HOME Directory
  export EXECwave="/gpfs/dell6/emc/modeling/noscrub/Bing.Fu/p8b/gw_p8b/exec"
  export FIXwave="/gpfs/dell6/emc/modeling/noscrub/Bing.Fu/p8b/gw_p8b/fix/fix_wave"
  export PARMwave="/gpfs/dell6/emc/modeling/noscrub/Bing.Fu/p8b/gw_p8b/parm/wave"
  export USHwave="/gpfs/dell6/emc/modeling/noscrub/Bing.Fu/p8b/gw_p8b/ush"
  #
  #
  echo "END: config.wave"
